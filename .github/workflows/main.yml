
# ================= THIS FILE IS AUTOMATICALLY GENERATED =================
#
# Please run generate.sh and commit after editing the workflow templates.
#
# ========================================================================

name: CI (main)
on:
  push:
    branches: [main]
  workflow_dispatch:
env:
  RUST_TOOLCHAIN: nightly-2022-02-21
  CARGO_TERM_COLOR: always
  CACHE_KEY_SUFFIX: 20220310v1
jobs:
  misc-check:
    name: misc check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install tools
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${BINARY}.tar.gz -O - | tar xz && sudo mv ${BINARY} /usr/bin/yq
          sudo apt install -y protobuf-compiler -o Acquire::Retries=3
          curl -sSL \
            https://github.com/uber/prototool/releases/download/v1.8.0/prototool-$(uname -s)-$(uname -m).tar.gz | \
            sudo tar -C /usr/local --strip-components 1 -xz
          curl -sSL \
            "https://github.com/bufbuild/buf/releases/download/v${BUF_VERSION}/buf-$(uname -s)-$(uname -m).tar.gz" | \
            sudo tar -xvzf - -C /usr/local --strip-components 1
        env:
          YQ_VERSION: v4.16.1
          BINARY: yq_linux_amd64
          BUF_VERSION: 1.0.0-rc6
      - name: Check if CI workflows are up-to-date
        run: |
          ./.github/template/generate.sh --check
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
      - name: Check protobuf code format
        run: |
          prototool format -d
        working-directory: proto/src/proto
      - name: Lint protobuf
        run: |
          buf lint
        working-directory: proto/src/proto
  rust-test:
    name: rust test with codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust toolchain@v1
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache Cargo home
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.CACHE_KEY_SUFFIX }}
      - name: Install cargo-sort
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install cargo-sort
      - name: Run rust cargo-sort check
        run: |
          make rust_cargo_sort_check
      - name: Run rust format check
        run: |
          make rust_fmt_check
      - name: Run rust clippy check
        run: |
          # If new CI checks are added, the one with `--locked` must be run first.
          make rust_clippy_check_locked
      - name: Install cargo-tarpaulin
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install cargo-tarpaulin
      - name: Run rust test with coverage
        run: |
          make rust_test_with_coverage
      - uses: codecov/codecov-action@v2

# ================= THIS FILE IS AUTOMATICALLY GENERATED =================
#
# Please run generate.sh and commit after editing the workflow templates.
#
# ========================================================================

