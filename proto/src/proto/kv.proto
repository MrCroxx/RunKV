syntax = "proto3";

package kv;

message GetRequest {
  bytes key = 1;
  uint64 sequence = 2;
}

message GetResponse {
  bytes value = 1;
}

message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

message PutResponse {}

message DeleteRequest {
  bytes key = 1;
}

message DeleteResponse {}

message SnapshotRequest {
  // A dummy key, infers that take snapshot of the shard that belongs.
  bytes key = 1;
}

message SnapshotResponse {
  uint64 sequence = 1;
}

message KvOpRequest {
  oneof request {
    GetRequest get = 1;
    PutRequest put = 2;
    DeleteRequest delete = 3;
    SnapshotRequest snapshot = 4;
  }
}

message KvOpResponse {
  oneof response {
    GetResponse get = 1;
    PutResponse put = 2;
    DeleteResponse delete = 3;
    SnapshotResponse snapshot = 4;
  }
}

message TxnRequest {
  repeated KvOpRequest ops = 1;
}

message TxnResponse {
  repeated KvOpResponse ops = 1;
}

service KvService {
  rpc Get(GetRequest) returns (GetResponse);
  rpc Put(PutRequest) returns (PutResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc Snapshot(SnapshotRequest) returns (SnapshotResponse);
  rpc Txn(TxnRequest) returns (TxnResponse);
}
